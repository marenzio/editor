---
layout: editor
title: MEI Editor for MODE

downloads:
    - name: "Marenzio Madrigal a 5"
      description: "Lib. 6, Sâ€™io parto, 4 pages - 119Kb"
      link: "Marenzio_Sesto_a_5_01.mei"
context-menus:
    - { name: "Breve", icon: "keyboard-00", class: "note", action: "editSet('dur', 'breve')" }
    - { name: "Whole", icon: "keyboard-01", class: "note", action: "editSet('dur', '1')" }
    - { name: "Half", icon: "keyboard-02", class: "note", action: "editSet('dur', '2')" }
    - { name: "Quarter", icon: "keyboard-04", class: "note", action: "editSet('dur', '4')" }
    - { name: "8-th", icon: "keyboard-08", class: "note", action: "editSet('dur', '8')" }
    - { name: "16-th", icon: "keyboard-16", class: "note", action: "editSet('dur', '16')" }
    - { name: "32-th", icon: "keyboard-32", class: "note", action: "editSet('dur', '32')" }
    - { divider: true }
    - { name: "Sharp", class: "note", action: "editSet('accid', 's')" }
    - { name: "Flat", class: "note", action: "editSet('accid', 'f')" }
    - { name: "Remove accid.", class: "note", action: "editSet('accid', '')" }
    - { divider: true }
    - { name: "Slur", class: "note", action: "editInsert('slur')" }
---

<script type="text/javascript">
//<![CDATA[
    
	var vrvToolkit = new verovio.toolkit();
	var page = 1;
	var zoom = 50;
	var pageHeight = 2970;
	var pageWidth = 2100;
    var show_xml = false;
    var font = 'Leipzig';
    var drag_id = new Array();
    var drag_start;
    var dragging;
    var last_note = ["", 0]
    var mute = false;
    
    function set_options( ) {
        pageHeight = ($(document).height() - $( "#navbar" ).height() - 4) * 100 / zoom ;
        pageWidth = ($(document).width()) * 100 / zoom ; // - $( "#sidbar" ).width();
		border = 50;
		options = JSON.stringify({
					inputFormat: 'mei',
					pageHeight: pageHeight,
					pageWidth: pageWidth,
					border: border,
					scale: zoom,
                    adjustPageHeight: 1,
					ignoreLayout: 1,
                    font: font
				});
		vrvToolkit.setOptions( options );
    }
	
	function load_data(data) {
		set_options();
		vrvToolkit.loadData(data);
		page = 1;
		load_page();
	}

	function load_page() {
		svg = vrvToolkit.renderPage(page, "");
		$("#svg_output").html(svg);

		// MM - uncomment to load into xml_output
        var mei = vrvToolkit.getMEI( page );
        $("#xml_output").text(mei);


		adjust_page_height();
	};
    
    function reload_page( id ) {
		vrvToolkit.redoLayout();
	    var elementPage = vrvToolkit.getPageWithElement( id );
        if (elementPage == 0) {
            console.log( "ID not found" );
            return;
        }
        if (elementPage != page) {
            page = elementPage;
        }
        load_page();
    }
    
    function play_note( id, update ) {
        if ( mute ) {
            return;
        }
        attrStr = vrvToolkit.getElementAttr( id );
        var attr = JSON.parse(attrStr);
        if (!attr.pname || !attr.oct ) {
            return;
        }
        if (update && (last_note[0] == attr.pname) &&  (last_note[1] == attr.oct)) {
            return;
        }
        last_note[0] = attr.pname;
        last_note[1] = attr.oct;
        
        var midiBase = 0;
        switch (attr.pname) {
            case 'd': midiBase = 2; break;
            case 'e': midiBase = 4; break;
            case 'f': midiBase = 5; break;
            case 'g': midiBase = 7; break;
            case 'a': midiBase = 9; break;
            case 'b': midiBase = 11; break;
        }
        if (attr.accid) {
            if (attr.accid == 'f') midiBase--;
            else if (attr.accid == 's') midiBase++;
        }
        var note = midiBase + (parseInt(attr.oct) + 1) * 12;
        //console.log( note );
		var velocity = 127; // how hard the note hits
		MIDI.setVolume(0, 127);
		MIDI.noteOn(0, note, velocity, 0);
		MIDI.noteOff(0, note, 0.5);
    };
    
	function next_page() {
		if (page >= vrvToolkit.getPageCount()) {
			return;
		}
		page = page + 1;
		load_page();
	};

	function prev_page() {
		if (page <= 1) {
			return;
		}
		page = page - 1;
		load_page();
	};

	function first_page() {
		page = 1;
		load_page();
	};
	
	function last_page() {
		page = vrvToolkit.getPageCount();
		load_page();
	};

	function apply_zoom() {
		set_options();
		vrvToolkit.redoLayout();
		page = 1;
		load_page();
	}

	function zoom_out() {
		if (zoom < 20) {
			return;
		}
		zoom = zoom / 2;
		apply_zoom();
	}

	function zoom_in() {
		if (zoom > 80) {
			return;
		}
		zoom = zoom * 2;
		apply_zoom();
	}
	
	function adjust_page_height() {
		// adjust the height of the panel
		if ( $('#svg_panel svg') ) {
            zoomed_height = pageHeight * zoom / 100;
            if ( zoomed_height < $('#svg_panel svg').height() ) {
                zoomed_height = $('#svg_panel svg').height();
            }
			$('#svg_output').height( zoomed_height ); // slighly more for making sure we have no scroll bar	
		}
	}
    
    function highlight_id( div, id ) {
        return;        
    }
    
	function set_font( fontname ) {
		font = fontname
		apply_zoom();
	}
        
    function editSet( attr, value ) {
        if (drag_id.length == 0) {
            return;
        }
		editorAction = JSON.stringify({ action: 'set', param: { elementId: drag_id[0],
            attrType: attr, attrValue: value }   
	    });
        var res = vrvToolkit.edit( editorAction );
        reload_page( drag_id[0] );  
    };

    function editInsert( elementType ) {
        if ((drag_id.length < 2) || (drag_id[0] == drag_id[1]) ) {
            console.log("Select two (different) notes!")
            return;
        }
		editorAction = JSON.stringify({ action: 'insert', param: { elementType: elementType,
            startid: drag_id[1], endid: drag_id[0] }   
	    });
        var res = vrvToolkit.edit( editorAction );
        reload_page( drag_id[0] );  
    };
    
	function upload_file() {
		
		$('#submit-btn').popover('hide');
		var f = $("#mei_files").prop('files')[0];
		var reader = new FileReader();

		// Closure to capture the file information.
		reader.onload = (function(theFile) {
			return function(e) {
                $('.row-offcanvas').toggleClass('active');
				load_data(e.target.result);
			};
		})(f);

		// Read in the image file as a data URL.
		reader.readAsText(f);
	};

//]]>
</script>

    
<!-- top navbar -->
<div id="navbar" class="navbar navbar-default navbar-with-sidebar">
    <button type="button" class="navbar-toggle sidebar-toggle" data-toggle="offcanvas" data-target=".sidebar-nav">
         <span class="icon-bar"></span>
         <span class="icon-bar"></span>
         <span class="icon-bar"></span> 
    </button>
    <a class="navbar-brand logo-nav" href="{{ site.baseurl }}/index.xhtml">
        <img src="{{ site.baseurl }}/images/verovio-fadded-50.png" />
    </a>
    <div class="btn-group">
        <button type="button" class="btn btn-default btn-sm">Font</button>
        <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
            <span class="caret"></span>
            <span class="sr-only">Toggle Dropdown</span>
        </button>
        <ul class="dropdown-menu" role="menu">
            <li><a href="#" onclick="set_font('Leipzig'); return false;">Leipzig</a></li>
            <li><a href="#" onclick="set_font('Bravura'); return false;">Bravura</a></li>
            <li><a href="#" onclick="set_font('Gootville'); return false;">Gootville</a></li>
            <!--<li class="divider"></li>
            <li><a href="#">Separated link</a></li>-->
        </ul>
    </div>
    <div class="btn-group" role="group">
			<button onclick="zoom_out()" class="btn btn-sm btn-default" type="button">
				<span class="glyphicon glyphicon-zoom-out"/>
			</button>
			<button onclick="zoom_in()" class="btn btn-sm  btn-default" type="button">
				<span class="glyphicon glyphicon-zoom-in"/>
			</button>
	</div>
    <div class="btn-group" role="group">
		<button onclick="first_page()" class="btn btn-sm btn-default" type="button">
			<span class="glyphicon glyphicon-fast-backward"/>
		</button>
		<button onclick="prev_page()" class="btn btn-sm btn-default" type="button">
			<span class="glyphicon glyphicon-backward"/>
		</button>
		<button onclick="next_page()" class="btn btn-sm btn-default" type="button">
			<span class="glyphicon glyphicon-forward"/>
		</button>
		<button onclick="last_page()" class="btn btn-sm btn-default" type="button">
			<span class="glyphicon glyphicon-fast-forward"/>
		</button>
	</div>
    <div class="btn-group" data-toggle="buttons">
        <label class="btn btn-default btn-sm  active">
            <input id="mute" type="checkbox" name="mute" value="mude" checked="true"/>
            <span class="glyphicon glyphicon-volume-up"></span>
        </label>
    </div>
</div>


<div id="parent_panel">
	<div id="xml_panel" >
		<div id="editor" style="height: 500px; width: 500px">some text</div>
	</div>
	<div id="svg_panel" style="background-color: #fff;">
		<div id="svg_output" />
	</div>
</div>


<!-- sidebar -->
<div class="sidebar-offcanvas" id="sidebar" role="navigation">
	<div class="sidebar-panel">
		<div class="row">
			<div class="col-xs-12">
				<h4>Examples</h4>
			</div>
		</div>
		<div id="downloads_panel_body">
			<div class="row">
				<div class="col-md-12">
					{% for d in page.downloads %}
					<p><a href="{{ site.baseurl }}/{{ page.name }}?examples/downloads/{{ d.link }}">{{ d.name }}</a><br/>
						 {{ d.description }}
					 </p>
					{% endfor %}
				</div>
				<!-- /.col-md-6 -->
			</div>
			<!-- /.row -->
		</div>
        
		<div class="row">
			<div class="col-xs-12">
				<h4>Select MEI file</h4>
			</div>
		</div>
    
		<div id="options_panel_body">
			<form id="upload_form" onsubmit="upload_file( $('#upload_form') ); return false" class="form-inline" role="form">
				<div class="row">
					<div class="col-md-12">
						<input type="file" id="mei_files" onchange="$('#submit-btn').popover('show');" name="file" style="margin: 4px 0px 8px 0px;"/>
					</div>
					<div class="col-md-12">
						<button type="submit" id="submit-btn" class="btn btn-default btn-sm popover-btn" data-container="body" data-toggle="popover" data-placement="left" data-content="Click to display the MEI file!" data-trigger="manual">Render</button>
					</div>
				</div>

				<!--><div id="log_panel" style="display: none">
					<hr class="panel"/>
					<p id="log_p"></p>
				</div>
				-->
	
			</form>
		</div>
        
	</div>
</div>

<div id="context-menu">
    <ul class="dropdown-menu" role="menu">
	    {% for d in page.context-menus %}
        {% if d.divider  %}<li class="divider"></li>
        {% else %}
	    <li><a class="ct-menu-{{ d.class }}" tabindex="-1" href="#" onclick="{{ d.action}}; return false;">{% if d.icon %}<span class="glyphicon {{ d.icon }}"/>  {% endif %}{{ d.name }}</a></li>
        {% endif %}
	    {% endfor %}
    </ul>
</div>




<script type="text/javascript">
//<![CDATA[
	$( document ).ready(function() {
		
		$(window).keyup(function(event){
			// We need to make sure not to capture event on text fields
			if ( $(event.target).hasClass('form-control') ) {
				return;
			}
			if ( event.ctrlKey && (event.keyCode == 37) ) {
				first_page();
			}
			else if ( event.keyCode == 37 ) {
				prev_page();
			}
			else if ( event.ctrlKey && (event.keyCode == 39) ) {
				last_page();
			}
			else if ( event.keyCode == 39 ) {
				next_page();
			}
			else if ( event.keyCode == 107 ) {
				zoom_in();
			}
			else if ( event.keyCode == 109 ) {
				zoom_out();
			}
		});
        
        $(window).resize(function(){
            apply_zoom();
        });
        
	    var editor = ace.edit("editor");

        $('#svg_output').on('click', ".note", function(e) {
//            var t = e.target, tx = parseInt(t.getAttribute("x"), 10), ty = parseInt(t.getAttribute("y"), 10);
//            console.log(t);


        })
        
        $('input[type=checkbox][name=mute]').change(function() {
            mute = !mute;
        });
        
        $('#svg_output').contextmenu( {
            before: function (e, element, target) {
                e.preventDefault();
                if (drag_id.length == 0) {
                    e.preventDefault();
                    this.closemenu();
                    return false;
                }
                return true;
            }
          });
		
      	MIDI.loadPlugin({
      		soundfontUrl: "{{ site.baseurl }}/soundfont/",
      		instrument: "acoustic_grand_piano",
      		callback: function() {
      		}
      	});
        
		// Adjust the size of the svg_output and the zoom according to the div (screen) size
		width = $('#svg_panel').width();
		zoom = Math.min( Math.floor( 100 * width / 2100 ), 40 );
	
		// Load the default file or the file passed in the URL
		var file = location.search.substring(1);
        console.log( file );
		if (file.length == 0) {
            file = "examples/downloads/Marenzio_Sesto_a_5_01.mei";
        }
		$( "#toggle_options" ).click();
		$.get( file , function( data ) {
			load_data( data );
		}, 'text');
	});
//]]>
</script>
